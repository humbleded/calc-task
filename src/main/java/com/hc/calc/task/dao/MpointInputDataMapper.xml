<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hc.calc.task.dao.MpointInputDataMapper">
    <resultMap id="BaseResultMap" type="com.hc.calc.task.model.BaseData">
        <result column="datadt" property="dataDt" jdbcType="TIMESTAMP"/>
        <result column="valuedecimal" property="value" jdbcType="VARCHAR"/>
        <result column="valuetext" property="valueText" jdbcType="VARCHAR"/>
        <result column="mpointid" property="mpointIds" jdbcType="BIGINT"/>
    </resultMap>

    <insert id="insertSelective" parameterType="com.hc.calc.task.model.MpointInputData">
        insert into t_mpoint_inputdata
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mpointid != null">
                mpointid,
            </if>
            <if test="datadt != null">
                datadt,
            </if>
            <if test="value != null">
                valuedecimal,
            </if>
            <if test="valuetext != null">
                valuetext,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mpointid != null">
                #{mpointid,jdbcType=BIGINT},
            </if>
            <if test="datadt != null">
                #{datadt,jdbcType=TIMESTAMP},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="valuetext != null">
                #{valuetext,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="sum" resultType="java.lang.Double">
    SELECT SUM(valuedecimal) from t_mpoint_inputdata
      where mpointid = #{id,jdbcType=BIGINT}
      and datadt >= #{start,jdbcType=TIMESTAMP}
      and datadt &lt; #{end,jdbcType=TIMESTAMP}
    </select>

    <select id="avg" resultType="java.lang.Double">
        SELECT AVG(valuedecimal) from t_mpoint_inputdata
        where mpointid = #{id,jdbcType=BIGINT}
        and datadt >= #{start,jdbcType=TIMESTAMP}
        and datadt &lt; #{end,jdbcType=TIMESTAMP}
    </select>

    <select id="max" resultType="java.lang.Double">
        SELECT MAX(valuedecimal) from t_mpoint_inputdata
        where mpointid = #{id,jdbcType=BIGINT}
        and datadt >= #{start,jdbcType=TIMESTAMP}
        and datadt &lt; #{end,jdbcType=TIMESTAMP}
    </select>

    <select id="min" resultType="java.lang.Double">
        SELECT MIN(valuedecimal) from t_mpoint_inputdata
        where mpointid = #{id,jdbcType=BIGINT}
        and datadt >= #{start,jdbcType=TIMESTAMP}
        and datadt &lt; #{end,jdbcType=TIMESTAMP}
    </select>

    <select id="prev" resultType="java.lang.Double">
        select valuedecimal from t_mpoint_inputdata where mpointid = #{id,jdbcType=BIGINT}
        and datadt >= date_sub(#{start,jdbcType=TIMESTAMP},interval 1 day) and datadt &lt;= #{start,jdbcType=TIMESTAMP}
        order by datadt desc LIMIT 1
    </select>
    <select id="getData" resultMap="BaseResultMap">
      SELECT datadt,valuedecimal,valuetext from t_mpoint_inputdata
      where mpointid = #{id,jdbcType=BIGINT}
        and datadt <![CDATA[ >= ]]> #{start,jdbcType=TIMESTAMP}
        and datadt <![CDATA[ < ]]> #{end,jdbcType=TIMESTAMP}
    </select>
    <select id="getDataNew" resultMap="BaseResultMap">
      SELECT datadt,valuedecimal,valuetext from t_mpoint_inputdata
      where mpointid = #{id,jdbcType=BIGINT}
        and datadt <![CDATA[ >= ]]> #{start,jdbcType=TIMESTAMP}
        and datadt <![CDATA[ <= ]]> #{end,jdbcType=TIMESTAMP}
    </select>


    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) from t_mpoint_inputdata
        where mpointid = #{id,jdbcType=BIGINT}
        and datadt >= #{start,jdbcType=TIMESTAMP}
        and datadt &lt; #{end,jdbcType=TIMESTAMP}
    </select>
    <insert id="addData" parameterType="com.hc.calc.task.model.MpointInputData">
	INSERT INTO t_mpoint_inputdata
		(mpointid, datadt, valuedecimal,
      valuetext)
		VALUES
			(#{mpointid,jdbcType=BIGINT},
                #{datadt,jdbcType=TIMESTAMP},
                #{value,jdbcType=TIMESTAMP},
                #{valuetext,jdbcType=VARCHAR})
		ON DUPLICATE KEY UPDATE
        valuedecimal=VALUES(valuedecimal),valuetext=VALUES(valuetext)
	</insert>

    <select id="getCycleAvgList" resultMap="BaseResultMap">
        SELECT FLOOR((UNIX_TIMESTAMP(DATADT) -
	             UNIX_TIMESTAMP(str_to_date('1970-01-01 00:00:00', 'yyyy-mm-dd hh24:mi:ss'))) / 60 * 10) AS VALUETEXT,
	       AVG(VALUE) AS VALUE
	  FROM T_MPOINT_HISDATA
	 WHERE DATADT BETWEEN
	       #{start,jdbcType=TIMESTAMP} AND
	       #{end,jdbcType=TIMESTAMP}
	   AND MPOINTID = #{id,jdbcType=VARCHAR}
	 GROUP BY FLOOR((UNIX_TIMESTAMP(DATADT) -
	                UNIX_TIMESTAMP(str_to_date('1970-01-01 00:00:00', '%Y-%m-%d %H:%i:%s'))) / 60 * 10)
	 ORDER BY VALUETEXT
	 ORDER BY VALUETEXT
    </select>

    <select id="getBaseDataByTaskIdAndTime" resultMap="BaseResultMap">
        select * FROM t_mpoint_inputdata WHERE mpointid = #{mpointId,jdbcType=BIGINT} and datadt = #{startDT,jdbcType=TIMESTAMP}
    </select>

    <select id="prevs" resultMap="BaseResultMap">
        select * from t_mpoint_inputdata where mpointid in
        <foreach collection="notAutoMpointIds" item="notAutoMpointId" index="index"
                 open="(" close=")" separator=",">
            #{notAutoMpointId,jdbcType=BIGINT}
        </foreach>  and datadt = #{startDT}
    </select>

    <select id="getOneCalcHistoryLogBeforeTime" resultMap="BaseResultMap">
        select * FROM t_mpoint_inputdata WHERE mpointid = #{mpointId,jdbcType=BIGINT} and datadt <![CDATA[ < ]]> #{startDT,jdbcType=TIMESTAMP} order by datadt desc  limit 1;
    </select>
</mapper>